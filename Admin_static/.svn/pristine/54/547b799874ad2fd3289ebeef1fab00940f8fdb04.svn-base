<template>
<div class="content">
    <silderBar></silderBar>
    <div class="body_main">
        <navBar></navBar>
        <div class="main" :style="widthMain">
            <div class="tips" id="{this.$route.name}">
                <Breadcrumb separator="<b class='demo-breadcrumb-separator'>=></b>">
                    <BreadcrumbItem :to="item.path" v-for="(item,index) in this.$route.meta.index" :key="index">{{item.name}}</BreadcrumbItem>
                </Breadcrumb>
            </div>
            <!-- 查询 -->
            <div class="top">
                <label>用户IDX：</label>
                    <Input v-model="idx" size="small" placeholder="请输入..." style="width: 180px" />
                <label>房间ID：</label>
                    <Input v-model="roomid" size="small" placeholder="请输入..." style="width: 180px" />
                <Button type="primary" size="small" @click="lookup">查询</Button>
                <Button type="primary" size="small" @click="add">添加</Button>
            </div>
            <!-- 主页面内容 -->
            <div class="center" >
                <Table border :columns="columns" :data="tabledata" class="table"  ref="table">
                    <template slot-scope="{ row }" slot="name">
                        <strong>{{ row.name }}</strong>
                    </template>
                </Table>
            </div>
            <!-- 遮罩层 -->
                <div class="marsk" v-if="showNone"></div>
            <!-- 新增页面 -->
                <div class="pop" v-if="showNonecreate">
                    <Form :label-width="90">
                        <FormItem label="请输入IDX：">
                            <Input v-model="address" type="textarea" :autosize="{minRows: 8,maxRows: 8}" placeholder="请输入..."></Input>
                        </FormItem>
                        <FormItem label="是否扶持：">
                            <Select v-model="pay">
                                <Option v-for="item in cityList" :value="item.value" :key="item.value">{{ item.label }}</Option>
                            </Select>
                        </FormItem>
                        <p style="color:red; margin-bottom: 15px;">批量添加请用‘|’将idx隔开，例：22222|33333|44444</p>
                        <FormItem>
                            <Button style="margin-left:-50px;" type="primary" @click="newadd">添加</Button>
                            <Button style="margin-left: 8px" type="dashed" @click="reset">重置</Button>
                            <Button style="margin-left: 8px" @click="close">取消</Button>
                        </FormItem>
                    </Form>      
                </div>
            <!-- 分页页面 -->
            <div class="bottom">
                <Page :total="count" :current='page' show-total show-elevator @on-change='fenye'/>
            </div>
        </div>
    </div>
</div>
</template>

<script>
import {square} from '../../../assets/js/download'
export default {
  name: 'Index',
  data () {
    return {
        widthMain:{width:''},//table组件自适应
        tagData:null,//tag数据
        colorName:'',//对比的tag名字
        tagDataLength:true,//可取消的状态

        query: '', // 查询功能 绑定的数据
        page: 1, // 当前页码
        pagesize: 10, // 每页条数
        idx: null, // 用户idx
        roomid: null, // 房间号
        count: 0, // 总条数

        showNone: false, // 控制页面遮罩层开关
        showNoneUpdate: false, // 修改页面弹出控制
        showNonecreate: false, // 新增页面弹出控制
        cityList: [ // 查询条件
            {
                value: 'Android',
                label: 'Android'
            },
            {
                value: 'iPhone',
                label: 'iPhone'
            },
            {
                value: 'AppStore',
                label: 'AppStore'
            },
            {
                value: 'taiwangooglestore',
                label: '台湾googlestore'
            },
            {
                value: 'taiwanAppStore',
                label: '台湾AppStore'
            }
        ],
        // 表格列名称
        columns: [
            {title: '主播IDX',key: 'pay'},
            {title: '房间ID',key: 'id'}, 
            {title: '房间号',key: 'money'},
            {title: '添加时间',key: 'volue'},
            {title: '是否扶持',key: 'gift'},
            {title: '操作人',key: 'address'},
            // {title: '操作',slot: 'action',align: 'center'}
            ],
        tabledata: [ // 数据表数据
            {
                pay: 'Android', // 支付类型
                id: 'com.sunday.80', // 商品ID
                money: 1, // 金额
                volue: 7000, //  币值
                gift: 0, // 礼物赠送币
                address: 'New York No. 1 Lake Park' // 说明
            },
            {
                pay: 'taiwanAppStore',
                id: 'com.sunday.30',
                money: 1.99,
                volue: 15000,
                gift: 0,
                address: 'London No. 1 Lake Park'
            },
            {
                pay: 'iPhone',
                id: 'com.bunny.5',
                money: 3.99,
                volue: 30000,
                gift: 0,
                address: 'Sydney No. 1 Lake Park'
            },
            {
                pay: 'AppStore',
                id: 'com.bunny.6',
                money: 1,
                volue: 7000,
                gift: 0,
                address: 'Ottawa No. 2 Lake Park'
            }
        ],
        

    }
  },
  created() {
        window.addEventListener('resize', this.getWidth);
        this.getWidth();
        this.totlist();
  },
  destroyed () {
  },
  mounted () {
      
  },
  computed: {
      
  },
  methods: {
      //table组件处理函数
        getWidth:function(){
            var wid =document.body.clientWidth;        //网页可见区域宽(body)
            this.widthMain.width=wid-200+'px';
        },
        getTag:function(){
            this.tagData=JSON.parse(localStorage.getItem("g_tagMArry"));
            this.colorName=this.$route.meta.name;
        },
        tagClose:function(item){
            if(this.tagData.length>1){
                let arr3 = this.tagData;
                let arr4 = arr3.filter(item3=>{
                    return item3.name != item.name;     
                })
                this.tagData=arr4;
                localStorage.setItem('g_tagMArry',JSON.stringify(arr4))
                if(item.name==this.$route.meta.name){
                        this.$router.push({path: arr4[0].index[2].path});
                        this.colorName=arr4[0].name;
                }else{
                }
            }else{
                localStorage.removeItem('g_tagMArry');
                this.$router.push({path:'/'});
            }   
        },
        tagChange:function(item){
            this.colorName=item.name;
            this.$router.push({path: item.index[2].path});
        },
        clearAll:function(){
            let arry =[];
            arry.push(this.$route.meta);
            this.tagData=arry;
            localStorage.setItem('g_tagMArry',JSON.stringify(arry))
        },
        totlist:function(){ // 初始页面刷新
            let token =localStorage.getItem('h_g_access_token');
            this.$axios({
                url: '/api/BPMService/User/GetAnchorInfoListAsync',
                method: 'get',
                //params 参数必写 , 如果没有参数传{}也可以
                headers:{
                        Authorization:'Bearer '+token
                },
                params:{
                    page: 1,
                    pagesize: 10,
                    idx: 0,
                    roomid: 0
                }
            })
            .then((res)=>{
                console.log(res)
                if(res.data.code == 1){
                    this.$Message.success('成功');
                    this.tabledata = res.data.data.pager.live_AnchorInfos;
                    this.count = res.data.data.pager.count;
                }else if(res.data.code == 0){
                    this.$Message.warning('无数据');
                }else if(res.data.code == -1){
                    this.$Message.error('异常');
                }else{
                    console.log(res.data.code);
                }
            })
            .catch((err)=>{
                console.log(err)
                if(err.response.status==401){
                    this.$Message.error('登录过期，请重新登录');
                    this.$router.push({path: '/login'});
                }
            })
        },
        reset: function(row) { // 修改页面重置功能
            this.pay = this.resets.pay,
            this.id = this.resets.id,
            this.money = this.resets.money,
            this.volue = this.resets.volue,
            this.gift = this.resets.gift,
            this.address = this.resets.address
        },
        close: function () { // 新建页面和修改页面取消修改
            this.showNone = false, // 遮罩层关闭
            this.showNoneUpdate = false, // 修改页面关闭
            this.showNonecreate = false, // 新建页面关闭

            this.resets.pay = null, // 页面重置功能 使用的缓存数据清空
            this.resets.id = null,
            this.resets.money = null,
            this.resets.volue = null,
            this.resets.gift = null,
            this.resets.address = null

        },
        add: function () { // 新建数据页面
            this.showNone = true,
            this.showNonecreate = true,
            this.pay = null, // 清空数据，防止之前点击过修改造成数据缓存
            this.id = null,
            this.money = null,
            this.volue = null,
            this.gift = null,
            this.address = null
        },
        newadd: function () { // 新建页面保存
            this.showNone = false,
            this.showNonecreate = false,
            console.log(this.id)
        },
        lookup: function () { // 查找
            let token = localStorage.getItem('h_g_access_token');
            this.$axios({
                url: '/api/BPMService/User/GetAnchorInfoListAsync',
                method: 'get',
                //params 参数必写 , 如果没有参数传{}也可以
                headers:{
                        Authorization:'Bearer '+token
                },
                params:{
                    page: this.page,
                    pagesize: this.pagesize,
                    idx: Number(this.idx),
                    roomid: Number(this.roomid)
                }
            })
            .then((res)=>{
                console.log(res)
                if(res.data.code == 1){
                    this.$Message.success('成功！');
                }else if(res.data.code == 0){
                    this.$Message.warning('无数据');
                }else if(res.data.code == -1){
                    this.$Message.error('异常');
                }else{
                    console.log(res.data.code)
                }
            })
            .catch((err)=>{
                console.log(err)
                if(err.response.status==401){
                    this.$Message.error('登录过期，请重新登录');
                    this.$router.push({path: '/login'});
                }
            })
        },
        fenye: function (page) { // 页面的分页功能
            console.log(page)
        }
  }
}
</script>

<!-- Add "scoped" attribute to limit CSS to this component only -->
<style scoped lang="scss">
.main{  // 主页面样式
    overflow-x: scroll;
    overflow: hidden;
    position: relative;
    .tips{ // 主页面
        text-align: left;
    }
    .top{margin-top:10px; margin-left: 20px; display: flex; padding: 5px;  // 表头部分 查找添加 样式
          button{
              margin-left: 15px;
          }
          label{
              margin-left: 15px;
            //   margin-right: 15px;
              font-size: 15px;
          }
    }
    .center{width:100%; margin-top:20px;
        button {
            margin-right: 5px
        }
    }  // 页面中部 表格部分样式
    .bottom{width:100%; margin-top:15px;} // 页面底部 分页部分样式
}
</style>
<template>
  <div class="content">
    <silderBar></silderBar>
    <div class="body_main">
        <navBar></navBar>
        <div class="main" :style="widthMain">
            <div class="tips" id="{this.$route.name}">
                <Breadcrumb separator="<b class='demo-breadcrumb-separator'>=></b>">
                    <BreadcrumbItem :to="item.path" v-for="(item,index) in this.$route.meta.index" :key="index">{{item.name}}</BreadcrumbItem>
                </Breadcrumb>
            </div>
          <!-- 查询 新增 -->
          <div class="top">
            <label>类型：</label>
              <Select v-model="query" size="small" style="width:150px">
                  <Option v-for="item in cityList" :value="item.value" :key="item.value">{{ item.label }}</Option>
              </Select>
              <Button type="primary" size="small" @click="lookup">开始审核</Button>
          </div>
          <!-- 主页面内容 -->
          <div class="center" >
            <Row style="background:#eee;padding:30px;">
                <Col span="5" style="margin-right:40px; margin-top: 20px;" v-for="item in videos" :key="item.value" :label="item.label">
                    <Card :bordered="false">
                        <p slot="title">Borderless card</p>
                        <p>{{item.label}}</p>
                        <p>Content of card</p>
                        <p>Content of card</p>
                        <Button type="primary" size="small" @click="lookup">拉黑</Button>
                        <Button type="primary" size="small" @click="lookup">踢出</Button>
                        <Button type="primary" size="small" @click="lookup">锁头像</Button>
                        <Button type="primary" size="small" @click="lookup" style="width:80%; margin-top: 5px;">发送警告</Button>
                    </Card>
                </Col>
            </Row>
          </div>
          <!-- 遮罩层 -->
          <div class="marsk" v-if="showNone"></div>
          <!-- 分页页面 -->
            <div class="bottom">
                <Page :total="100" show-total show-elevator @on-change='fenye'/>
            </div>
        </div>
    </div>
  </div>
</template>

<script>
import {square} from '../../../assets/js/download'
export default {
  name: 'Index',
  data () {
    return {
        widthMain:{width:''},//table组件自适应
        //面包屑数组
        query: '', // 查询功能 绑定的数据
        showNone: false, // 控制页面遮罩层开关
        cityList: [ // 查询条件
            {
                value: 'Android',
                label: 'Android'
            },
            {
                value: 'iPhone',
                label: 'iPhone'
            },
            {
                value: 'AppStore',
                label: 'AppStore'
            },
            {
                value: 'taiwangooglestore',
                label: '台湾googlestore'
            },
            {
                value: 'taiwanAppStore',
                label: '台湾AppStore'
            }
        ],
        videos: [
            {
                value: '1',
                label: '视频墙功能'
            },
            {
                value: '2',
                label: '视频墙功能'
            },
            {
                value: '3',
                label: '视频墙功能'
            },
            {
                value: '3',
                label: '视频墙功能'
            },
            {
                value: '3',
                label: '视频墙功能'
            }
        ]
        }
  },
  created() {
    window.addEventListener('resize', this.getWidth);
    this.getWidth()
    this.totlist()
    
  },
  destroyed () {
    window.removeEventListener('resize', this.getWidth)
  },
  mounted () {
      
  },
  computed: {
      
  },
  methods: {
    //table组件处理函数
    getWidth:function(){
            var wid =document.body.clientWidth;        //网页可见区域宽(body)
            this.widthMain.width=wid-200+'px';
    },
    totlist:function(){ // 初始页面刷新
        let token =localStorage.getItem('h_g_access_token');
        this.$axios({
            url: '/api/BPMService/User/GetUserOnLineListAsync?page=1&pagesize=1&type=0',
            method: 'get',
            //params 参数必写 , 如果没有参数传{}也可以
            headers:{
                    Authorization:'Bearer '+token
            },
            params:{
               
            }
        })
        .then((res)=>{
            console.log(res)
           
        })
        .catch((err)=>{
            console.log(err)
            if(err.response.status==401){
                this.$Message.error('登录过期，请重新登录');
                this.$router.push({path: '/login'});
            }
        })
    },
      update: function(row) { // 修改页面
          this.resets.pay = row.pay
          this.resets.id = row.id
          this.resets.money = row.money
          this.resets.volue = row.volue
          this.resets.gift = row.gift
          this.resets.address = row.address,

          this.showNone = true,
          this.showNoneUpdate = true,
          this.pay = row.pay,
          this.id = row.id,
          this.money = row.money,
          this.volue = row.volue,
          this.gift = row.gift,
          this.address = row.address,
          console.log(row)
      },
      reset: function(row) { // 修改页面重置功能
          this.pay = this.resets.pay,
          this.id = this.resets.id,
          this.money = this.resets.money,
          this.volue = this.resets.volue,
          this.gift = this.resets.gift,
          this.address = this.resets.address
      },
      updateadd: function() { // 修改页面保存
          this.showNone = false,
          this.showNoneUpdate = false,
          console.log(this.id)
      },
      close: function () { // 新建页面和修改页面取消修改
          this.showNone = false, // 遮罩层关闭
          this.showNoneUpdate = false, // 修改页面关闭
          this.showNonecreate = false, // 新建页面关闭

          this.resets.pay = null, // 页面重置功能 使用的缓存数据清空
          this.resets.id = null,
          this.resets.money = null,
          this.resets.volue = null,
          this.resets.gift = null,
          this.resets.address = null

      },
      remove: function(index,row) { // 删除
          this.data.splice(index, 1);
          console.log(row.id)
      },
      create: function () { // 新建数据页面
          this.showNone = true,
          this.showNonecreate = true,
          this.pay = null, // 清空数据，防止之前点击过修改造成数据缓存
          this.id = null,
          this.money = null,
          this.volue = null,
          this.gift = null,
          this.address = null
      },
      newadd: function () { // 新建页面保存
          this.showNone = false,
          this.showNonecreate = false,
          console.log(this.id)
      },
      lookup: function () { // 查找
          console.log(this.query)
      },
      fenye: function (page) { // 页面的分页功能
          console.log(page)
      }
  }
}
</script>

<!-- Add "scoped" attribute to limit CSS to this component only -->
<style scoped lang="scss">
.main{  // 主页面样式
    overflow-x: scroll;
    overflow: hidden;
    position: relative;
    .tips{ // 主页面
        text-align: left;
    }
    .top{margin-top:10px; margin-left: 20px; display: flex; padding: 5px;  // 表头部分 查找添加 样式
          button{
              margin-left: 15px;
          }
          label{
              margin-left: 10px;
            //   margin-right: 10px;
              font-size: 15px;
          }
    }
    .center{width:100%; margin-top:20px;
        button {
            margin-right: 5px
        }
    }  // 页面中部 表格部分样式
    .bottom{width:100%; margin-top:15px;} // 页面底部 分页部分样式

}
</style>
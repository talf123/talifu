import Vue from 'vue'
import Router from 'vue-router'
import HelloWorld from '@/components/pages/HelloWorld'
import Error from '@/components/pages/Error'
import Login from '@/components/pages/Login'
import Index from '@/components/pages/Index'
import Activity from '@/components/pages/Activity'
import College from '@/components/pages/College'
import System from '@/components/pages/System.vue'
import Power from '@/components/pages/Power.vue'
Vue.use(Router)

const router= new Router({
  // mode:'history',
  routes: [
    {
      path:'*',
      component:Error
    },
    {
      path: '/',
      name: 'HelloWorld',
      component: HelloWorld
    },
    {
      path: '/activity',
      name: 'Activity',
      component: Activity
    },
    {
      path: '/login',
      name: 'Login',
      component: Login
    },
    {
      path: '/index',
      name: 'Index',
      component: Index
    },
    {
      path: '/college',
      name: 'College',
      component: College
    },
    {
      path: '/system',
      name: 'System',
      component: System
    },
    {
      path: '/power',
      name: 'Power',
      component: Power
    },
  ]
})

// 全局路由守卫
router.beforeEach((to, from, next) => {
  // console.log('navigation-guards');
  // to: Route: 即将要进入的目标 路由对象
  // from: Route: 当前导航正要离开的路由
  // next: Function: 一定要调用该方法来 resolve 这个钩子。执行效果依赖 next 方法的调用参数。
  const nextRoute = ['Activity'];
  let isLogin=localStorage.getItem("g_userName1");// 是否登录
  console.log(isLogin);
  // 未登录状态；当路由到nextRoute指定页时，跳转至login
  if (nextRoute.indexOf(to.name) >= 0) { 
    if (isLogin==null) {
      console.log('what fuck');
      router.push({ name: 'Login' })
    }
  }
  // 已登录状态；当路由到login时，跳转至home
  if (to.name === 'Login') {
    if (isLogin) {
      router.push({ name: 'HelloWorld' });
    }
  }
  next();
});
export default router
